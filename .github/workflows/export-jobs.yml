name: Export Jobs to JSON

on:
  schedule:
    - cron: '0 3 * * *' # daily at 03:00 UTC
  workflow_dispatch: {}

jobs:
  export:
    runs-on: ubuntu-latest
    timeout-minutes: 3 # Reduced from 5 to 3 minutes
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        timeout-minutes: 1

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
        timeout-minutes: 1

      - name: Install firebase-admin
        run: npm install firebase-admin
        timeout-minutes: 1

      - name: Run exporter
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        run: |
          echo "Starting exporter with timeout..."
          timeout 25s node scripts/export-jobs.js || echo "Exporter timed out, but continuing..."
        timeout-minutes: 1

      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet data/jobs.json; then
            echo "no-changes=true" >> $GITHUB_OUTPUT
            echo "No changes to jobs.json"
          else
            echo "no-changes=false" >> $GITHUB_OUTPUT
            echo "Changes detected in jobs.json"
          fi
        timeout-minutes: 1

      - name: Update file via GitHub API (fast)
        if: steps.check-changes.outputs.no-changes == 'false'
        run: |
          echo "Updating jobs.json via GitHub API..."
          
          # Get current file SHA
          SHA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/contents/data/jobs.json" | \
            jq -r '.sha')
          
          # Encode file content
          CONTENT=$(base64 -w 0 data/jobs.json)
          
          # Update file via API
          curl -X PUT \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"message\": \"chore: update jobs.json [skip ci]\",
              \"content\": \"$CONTENT\",
              \"sha\": \"$SHA\"
            }" \
            "https://api.github.com/repos/${{ github.repository }}/contents/data/jobs.json"
          
          echo "✅ File updated via API"
        timeout-minutes: 1
        continue-on-error: true

      - name: Fallback: Git push
        if: steps.check-changes.outputs.no-changes == 'false' && failure()
        run: |
          echo "API update failed, trying git push..."
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add data/jobs.json
          git commit -m "chore: update jobs.json [skip ci]"
          git push origin HEAD:${{ github.ref }}
        timeout-minutes: 1
        continue-on-error: true

      - name: Skip commit (no changes)
        if: steps.check-changes.outputs.no-changes == 'true'
        run: echo "No changes to commit, skipping push"

      - name: Final status
        run: |
          if [ -f "data/jobs.json" ]; then
            echo "✅ Jobs file exists and is ready"
            echo "📊 File size: $(wc -l < data/jobs.json) lines"
          else
            echo "❌ Jobs file not found"
            exit 1
          fi
        timeout-minutes: 1

